---
# file: roles/apache2/tasks/apache2-vhosts.yml
#- name: debug vars
#  debug: msg="-----------------   \n\n {{ item[1] }}"
#  with_items: apache2_vhosts|dictsort
#  tags:
#    - apache2
#    - vhosts
# copy site specific ssl certs
- name: copy Certificate Authority cert to apache dest.
  copy: src={{ item[1].ssl.cert_authority }} dest=/etc/apache2/ssl/{{ item[1].server_name }}.authcert owner=root group=root mode=0644
  with_items: apache2_vhosts|dictsort
  when: item[1].ssl.cert_authority
  notify:
   - restart apache2
  tags:
    - apache2
    - vhosts

- name: copy main ssl certificate to apache dest.
  when: item[1].ssl.site_cert
  copy: src={{ item[1].ssl.site_cert }} dest=/etc/apache2/ssl/{{ item[1].server_name }}.cert owner=root group=root mode=0644
  with_items: apache2_vhosts|dictsort
  notify:
   - restart apache2
  tags:
    - apache2
    - vhosts

- name: copy private key file to apache dest.
  when: item[1].ssl.private_key
  copy: src={{ item[1].ssl.private_key }} dest=/etc/apache2/ssl/{{ item[1].server_name }}.key owner=root group=root mode=0644
  with_items: apache2_vhosts|dictsort
  notify:
   - restart apache2
  tags:
    - apache2
    - vhosts

- name: copy chain file to apache dest.
  when: item[1].ssl.site_chain_file
  copy: src={{ item[1].ssl.site_chain_file }} dest=/etc/apache2/ssl/{{ item[1].server_name }}.chainfile owner=root group=root mode=0644
  with_items: apache2_vhosts|dictsort
  notify:
   - restart apache2
  tags:
    - apache2
    - vhosts

# copy default ssl certs if they exist
- name: copy default Certificate Authority cert to apache dest.
  when: item[1].ssl.cert_authority
  copy: src={{ item[1].ssl.cert_authority }} dest=/etc/apache2/ssl/{{ item[1].server_name }}.authcert owner=root group=root mode=0644
  with_items: apache2_vhosts_defaults|dictsort
  notify:
   - restart apache2
  tags:
    - apache2
    - vhosts

- name: copy default main ssl certificate to apache dest.
  when: item[1].ssl.site_cert
  copy: src={{ item[1].ssl.site_cert }} dest=/etc/apache2/ssl/{{ item[1].server_name }}.cert owner=root group=root mode=0644
  with_items: apache2_vhosts_defaults|dictsort
  notify:
   - restart apache2
  tags:
    - apache2
    - vhosts

- name: copy default private key file to apache dest.
  when: item[1].ssl.private_key
  copy: src={{ item[1].ssl.private_key }} dest=/etc/apache2/ssl/{{ item[1].server_name }}.key owner=root group=root mode=0644
  with_items: apache2_vhosts_defaults|dictsort
  notify:
   - restart apache2
  tags:
    - apache2
    - vhosts

- name: copy default chain file to apache dest.
  when: item[1].ssl.site_chain_file
  copy: src={{ item[1].ssl.site_chain_file }} dest=/etc/apache2/ssl/{{ item[1].server_name }}.chainfile owner=root group=root mode=0644
  with_items: apache2_vhosts_defaults|dictsort
  notify:
   - restart apache2
  tags:
    - apache2
    - vhosts

# deal with vhosts
- name: create and enable vhosts 
  when: apache2_vhosts is defined
  template: src=vhost.j2 dest=/etc/apache2/sites-available/{{ item[1].server_name }}
  with_items: apache2_vhosts|dictsort
  notify:
   - restart apache2
  tags:
    - apache2
    - vhosts

- name: enable vhosts by creating symlinks
  when: item[1].enabled
  file: state=link path=/etc/apache2/sites-enabled/{{ item[1].server_name }} src=/etc/apache2/sites-available/{{ item[1].server_name }}
  with_items: apache2_vhosts|dictsort
  notify:
   - restart apache2
  tags:
    - apache2
    - vhosts

- name: disable vhosts by removing symlinks in sites-enabled
  when: item[1].enabled == false
  file: state=absent path=/etc/apache2/sites-enabled/{{ item[1].server_name }}
  with_items: apache2_vhosts|dictsort
  notify:
   - restart apache2
  tags:
    - apache2
    - vhosts